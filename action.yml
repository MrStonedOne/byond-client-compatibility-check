name: 'Byond Client Compatibility Check'
description: "Github action to confirm that the required client version of byond world (.dmb) isn't higher than expected."

inputs:
  dmb-location: 
    description: 'File location of the compiled byond world dmb to check.'
    required: true
  max-required-client-version: 
    description: 'Highest allowed dreamseeker major version that can be required by the compiled byond world. Leave empty if you just want the output'
    required: false
    default: 9999
outputs:
  required-client-version:
    description: 'The detected client compatibility version'
    value: ${{ steps.fetch-required-client-version.outputs.required-client-version }}

runs:
  using: "composite"
  steps:
    - name: 'Validate inputs.max-required-client-version'
      id: validate-max-required-client-version
      shell: bash
      run: '(( ${{ inputs.max-required-client-version }} ))'
      if: 'inputs.max-required-client-version != 9999'
    
    - name: 'Input validation error message'
      id: validate-max-required-client-version-error-message
      if: "failure() && steps.validate-max-required-client-version.outcome == 'failure'"
      shell: bash
      run: "echo '::error ::Invalid max-required-client-version passed to Byond Client Compatibility Check: `${{ toJSON(inputs.max-required-client-version) }}`'"
    
    - name: 'Extract client compatibility version from dmb'
      id: fetch-required-client-version
      shell: bash
      run: 'echo "required-client-version=$(( $( head -n2 ${{ inputs.dmb-location }} | tail -n1 | cut -d " " -f 4 ) ))" >> $GITHUB_OUTPUT'
    
    - name: '.dmb parse error check'
      id: dmb-parse-error-check
      if: "(failure() && steps.fetch-required-client-version.outcome == 'failure') || (success() && (steps.fetch-required-client-version.outputs.required-client-version == null || steps.fetch-required-client-version.outputs.required-client-version == ''))"
      shell: bash
      run: 'echo "::error file=${{ inputs.dmb-location }},line=1,endline=2::Error parsing dmb for required client version";exit 1'
      
    - name: 'Check required client version is not higher then allowed max.'
      id: check-required-client-version
      shell: bash
      #this still uses bash instead of an if: and echo purely so that it can't support floats.
      run: (( ${{ steps.fetch-required-client-version.outputs.required-client-version }} <= ${{ inputs.max-required-client-version }} ))
      if: 'inputs.max-required-client-version != 9999'
    
    - name: 'Version validation error message'
      id: check-required-client-version-error
      if: "failure() && steps.check-required-client-version.outcome == 'failure'"
      shell: bash
      run: 'echo "::error file=${{ inputs.dmb-location }},line=2,endline=2::byond world ${{ inputs.dmb-location }} requires version ${{ steps.fetch-required-client-version.outputs.required-client-version }} which is higher than the allowed max required version of ${{ inputs.max-required-client-version }}."'
